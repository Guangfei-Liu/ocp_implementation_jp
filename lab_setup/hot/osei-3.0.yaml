heat_template_version: 2013-05-23

description: Template of the OSE Implementation lab.

parameters:
  guid:
    type: string
    label: GUID
    description: Automatically assigned Global Unique ID of the lab environment.
    default: '0000'
    constraints:
      - length: { min: 4, max: 4 }
  image:
    type: string
    label: Image name or ID
    description: Base image of the lab servers.
    default: osei-3.0
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used in the lab.
    default: p2.small
  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be installed on servers.
  public_net:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: public

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wh }
      count: 5
      timeout: 600

  wh:
    type: OS::Heat::WaitConditionHandle

  oselab_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 53
          port_range_max: 53
        - protocol: udp
          port_range_min: 53
          port_range_max: 53

  master_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 8443
          port_range_max: 8444

  infranode_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 1936
          port_range_max: 1936
        - protocol: tcp
          port_range_min: 8443
          port_range_max: 8444

  node_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443


  private_net:
    type: OS::Neutron::Net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: private_net }
      cidr: '192.168.0.0/24'
      gateway_ip: '192.168.0.1'
      dns_nameservers: [ '192.168.0.254' ]

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }


  oselab_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      fixed_ips:
        - ip_address: '192.168.0.254'
      security_groups: 
        - { get_resource: oselab_secgroup }

  oselab:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: oselab_port }
      user_data_format: RAW
      user_data: 
        str_replace:
          params:
            wc_notify: { get_attr: ['wh', 'curl_cli'] }
            __guid__: { get_param: guid }
          template: |
            #!/bin/bash -ex
            systemctl stop NetworkManager
            systemctl disable NetworkManager
            hostnamectl set-hostname oselab-__guid__.oslab.opentlc.com
            cat > /etc/resolv.conf <<EOF
            search oslab.opentlc.com
            nameserver 192.168.57.7
            EOF
            wc_notify --data-binary '{"status": "SUCCESS"}'

  oselab_pub_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: oselab_port }
    depends_on: [router_interface]


  master00_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      fixed_ips:
        - ip_address: '192.168.0.100'
      security_groups: 
        - { get_resource: master_secgroup }

  master00:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: master00_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wh', 'curl_cli'] }
            __guid__: { get_param: guid }
          template: |
            #!/bin/bash -ex
            systemctl stop NetworkManager
            systemctl disable NetworkManager
            hostnamectl set-hostname master00-__guid__.oslab.opentlc.com
            wc_notify --data-binary '{"status": "SUCCESS"}'

  master00_volume:
    type: OS::Cinder::Volume
    properties:
      size: 10

  master00_vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: master00 }
      volume_id: { get_resource: master00_volume }
      mountpoint: /dev/vdb

  master00_pub_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: master00_port }
    depends_on: [router_interface]


  infranode00_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      fixed_ips:
        - ip_address: '192.168.0.101'
      security_groups: 
        - { get_resource: infranode_secgroup }

  infranode00:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: infranode00_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wh', 'curl_cli'] }
            __guid__: { get_param: guid }
          template: |
            #!/bin/bash -ex
            systemctl stop NetworkManager
            systemctl disable NetworkManager
            hostnamectl set-hostname infranode00-__guid__.oslab.opentlc.com
            wc_notify --data-binary '{"status": "SUCCESS"}'

  infranode00_volume:
    type: OS::Cinder::Volume
    properties:
      size: 10

  infranode00_vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: infranode00 }
      volume_id: { get_resource: infranode00_volume }
      mountpoint: /dev/vdb

  infranode00_pub_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: infranode00_port }
    depends_on: [router_interface]


  node00_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      fixed_ips:
        - ip_address: '192.168.0.200'
      security_groups: 
        - { get_resource: node_secgroup }

  node00:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: node00_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wh', 'curl_cli'] }
            __guid__: { get_param: guid }
          template: |
            #!/bin/bash -ex
            systemctl stop NetworkManager
            systemctl disable NetworkManager
            hostnamectl set-hostname node00-__guid__.oslab.opentlc.com
            wc_notify --data-binary '{"status": "SUCCESS"}'

  node00_volume:
    type: OS::Cinder::Volume
    properties:
      size: 10

  node00_vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: node00 }
      volume_id: { get_resource: node00_volume }
      mountpoint: /dev/vdb

  node00_pub_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: node00_port }
    depends_on: [router_interface]


  node01_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_net }
      fixed_ips:
        - ip_address: '192.168.0.201'

  node01:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: node01_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wh', 'curl_cli'] }
            __guid__: { get_param: guid }
          template: |
            #!/bin/bash -ex
            systemctl stop NetworkManager
            systemctl disable NetworkManager
            hostnamectl set-hostname node01-__guid__.oslab.opentlc.com
            wc_notify --data-binary '{"status": "SUCCESS"}'

  node01_volume:
    type: OS::Cinder::Volume
    properties:
      size: 10

  node01_vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: node01 }
      volume_id: { get_resource: node01_volume }
      mountpoint: /dev/vdb


outputs:
  oselab_public_ip:
    description: IP address of oselab server in public network.
    value: { get_attr: [ oselab_pub_ip, floating_ip_address ]}
  master00_public_ip:
    description: IP address of master server in public network.
    value: { get_attr: [ master00_pub_ip, floating_ip_address ]}
  infranode_public_ip:
    description: IP address of infranode in public network.
    value: { get_attr: [ infranode00_pub_ip, floating_ip_address ]}
  node00_public_ip:
    description: IP address of node00 in public network.
    value: { get_attr: [ node00_pub_ip, floating_ip_address ]}
